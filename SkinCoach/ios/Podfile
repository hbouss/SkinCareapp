# ios/Podfile

platform :ios, '13.0'

# ── 1) Stub global pour Expo.podspec ──────────────────────────────
#    Doit être défini *avant* use_expo_modules!
def get_folly_config
  { compiler_flags: [] }
end

# ── 2) Chargement des scripts RN et Expo ─────────────────────────
require_relative '../node_modules/expo/scripts/autolinking'
require_relative '../node_modules/react-native/scripts/react_native_pods'

install! 'cocoapods', :deterministic_uuids => false

# ── 3) Déclaration de votre target ────────────────────────────────
target 'SkinCoach' do
  # Intègre tous les modules Expo (dont Expo.podspec)
  use_expo_modules!

  # Autolinking des modules natifs
  use_native_modules!

  # Si vous avez besoin de frameworks dynamiques (rare)
  # use_frameworks! :linkage => :static
end

# 4) UNIQUE target pour votre app
target 'SkinCoach' do
  # Use Expo modules (génère le Podspec et intègre Expo.podspec)
  use_expo_modules!

  # Use all the native modules autolinkés
  config = use_native_modules!

  # Si vous voulez forcer frameworks dynamiques
  use_frameworks! :linkage => podfile_properties['ios.useFrameworks'].to_sym if podfile_properties['ios.useFrameworks']

  # Flags par défaut (Hermes, Fabric…)
  flags = get_default_flags()

  use_react_native!(
    :path => config[:reactNativePath],
    :hermes_enabled => podfile_properties['expo.jsEngine'] == 'hermes',
    :fabric_enabled => flags[:fabric_enabled],
    :app_path => "#{Pod::Config.instance.installation_root}/.."
  )

  post_install do |installer|
    react_native_post_install(installer, :mac_catalyst_enabled => false)
    __apply_Xcode_12_5_M1_post_install_workaround(installer)

    installer.target_installation_results.pod_target_installation_results.each do |_, result|
      result.resource_bundle_targets.each do |bundle_target|
        bundle_target.build_configurations.each do |config|
          config.build_settings['CODE_SIGNING_ALLOWED'] = 'NO'
        end
      end
    end
  end
end