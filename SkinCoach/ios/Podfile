platform :ios, '15.1'
install! 'cocoapods', deterministic_uuids: false

# 1) Charger d’abord React-Native pods (définit prepare_react_native_project!)
require_relative '../node_modules/react-native/scripts/react_native_pods'

# 2) Puis charger l’autolinker Expo
require_relative '../node_modules/expo/scripts/autolinking'

# 3) Maintenant que prepare_react_native_project! est défini, on peut l’appeler
prepare_react_native_project!

# 4) Charger votre config Podfile.properties (deployTarget etc.)
require 'json'
podfile_properties = JSON.parse(File.read(File.join(__dir__, 'Podfile.properties.json'))) rescue {}

# 5) C’est parti pour la target
target 'SkinCoach' do
  use_expo_modules!                     # intègre Expo.podspec
  config = use_native_modules!          # autolink des modules natifs

  use_react_native!(
    path: config[:reactNativePath],
    hermes_enabled: podfile_properties['expo.jsEngine'] != 'jsc',
    app_path: "../"
  )

  post_install do |installer|
    react_native_post_install(installer, mac_catalyst_enabled: false)
    installer.pod_targets.each do |pod|
      pod.build_configurations.each do |c|
        c.build_settings['CODE_SIGNING_ALLOWED'] = 'NO'
      end
    end
  end
end

target 'SkinCoach' do
  use_expo_modules!

  if ENV['EXPO_USE_COMMUNITY_AUTOLINKING'] == '1'
    config_command = ['node', '-e', "process.argv=['', '', 'config'];require('@react-native-community/cli').run()"];
  else
    config_command = [
      'npx',
      'expo-modules-autolinking',
      'react-native-config',
      '--json',
      '--platform',
      'ios'
    ]
  end

  config = use_native_modules!(config_command)

  use_frameworks! :linkage => podfile_properties['ios.useFrameworks'].to_sym if podfile_properties['ios.useFrameworks']
  use_frameworks! :linkage => ENV['USE_FRAMEWORKS'].to_sym if ENV['USE_FRAMEWORKS']

  use_react_native!(
    :path => config[:reactNativePath],
    :hermes_enabled => podfile_properties['expo.jsEngine'] == nil || podfile_properties['expo.jsEngine'] == 'hermes',
    # An absolute path to your application root.
    :app_path => "#{Pod::Config.instance.installation_root}/..",
    :privacy_file_aggregation_enabled => podfile_properties['apple.privacyManifestAggregationEnabled'] != 'false',
  )

  post_install do |installer|
    react_native_post_install(
      installer,
      config[:reactNativePath],
      :mac_catalyst_enabled => false,
      :ccache_enabled => podfile_properties['apple.ccacheEnabled'] == 'true',
    )

    # This is necessary for Xcode 14, because it signs resource bundles by default
    # when building for devices.
    installer.target_installation_results.pod_target_installation_results
      .each do |pod_name, target_installation_result|
      target_installation_result.resource_bundle_targets.each do |resource_bundle_target|
        resource_bundle_target.build_configurations.each do |config|
          config.build_settings['CODE_SIGNING_ALLOWED'] = 'NO'
        end
      end
    end
  end
end
